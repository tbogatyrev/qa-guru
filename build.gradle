plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

compileJava.options.encoding = 'UTF-8'
compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

allure {
    report {
        version.set("2.17.2")
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.17.2")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:5.25.1',
            'org.junit.jupiter:junit-jupiter:5.8.2',
            'com.github.javafaker:javafaker:1.0.2',
            'com.fasterxml.jackson.core:jackson-databind:2.13.0',
            'io.qameta.allure:allure-selenide:2.17.2',
            'com.codeborne:pdf-test:1.7.0',
            'com.codeborne:xls-test:1.4.0',
            'com.opencsv:opencsv:5.5.2',
            'org.assertj:assertj-core:3.22.0',
            'org.aeonbits.owner:owner:1.0.4'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.8.2',
            'org.slf4j:slf4j-simple:1.7.29'
    )
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    //    systemProperty("browser", "safari")
//    systemProperty("environment", System.getProperty("environment", "stage")) // preprod, prod, stage

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task registration_tests(type: Test) {
    useJUnitPlatform {
        includeTags "registration"
    }
}